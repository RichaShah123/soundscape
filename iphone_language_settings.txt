- I decided to join Jay on the issue he's working on. He's working on the iphone_language_settings. We spoke with Tim and he advised us to work on one common repo so that we could see each other's edits and comment on each other's work. I made a separate folder in Finder for just my and Jay's code, and started looking at the relevant code with him to discuss a proper course of action.

- I’ve been working on the iPhone language settings issue for a while now, and honestly, it’s been more complicated than I expected. The goal is to make sure the app properly detects and responds to the phone’s system language, so users get a localized experience automatically. Right now, the app doesn't always switch to the correct language unless the user does it manually in the app settings, which isn’t ideal, especially for first-time users who might expect their phone's default to be respected.

- At first, I assumed it would just be a matter of checking the code referring to the language's current locale and adjusting the app’s language accordingly, but it turns out there’s more to it. I dug into Apple’s localization documentation and found that iOS uses a priority list of preferred languages, and apps are supposed to pull from that. I tried accessing that list, and that seemed like the right track, but something in the way Soundscape is set up is preventing the changes from actually reflecting in the UI.

- One of the trickiest parts has been figuring out when and how the app sets its language—whether it’s baked into the onboarding process, hardcoded somewhere, or being overwritten during initialization. I spent a lot of time going through AppDelegate and some of the onboarding flow files, trying to find anything that would block language updates. I also looked at how the app stores language preferences, and I think there might be some caching going on that’s preventing the change from sticking.

- I tested a couple different approaches, like forcing a reload of the root view controller after the language is changed, and playing around with the UserDefaults keys to see if language preference is being saved there. Some things started to work when I simulated a full app restart, but not consistently. I spoke with Jay and we don't know that we can make the app change the language automatically in the app. We've come up with a new solution; to open up a pop-up on the app when there is a difference between the phone's language setting and the app's language setting. I’m planning to check in with the rest of the team to see if anyone’s run into something similar or has ideas for a cleaner fix. 

- We've officially started working on the pop-up and we're kind of stuck. We've found the code for the language selection window from the onboarding process, and we were thinking of implementing some sort of checker in the code, so as soon as the app detects the language difference, it brings up the pop-up from the onboarding process and asks if the user wants to change the language. The code for the checker is giving us a little bit of a hard time and we're not able to detect the language difference as of right now.

- So we've finally gotten the code for the checker to work, and the pop-up shows up now when the language difference is detected. We edited the code for the AppDelegate because we found that changing the code there made the most difference when we ran the code on the simulator. But the pop-up shows up for just a second and then goes away. I don't really understand why.

- After talking things through with Jay, and kind of testing the code here and there we got the pop-up to show up and stay so the user could make their selection. But they couldn't exit the pop-up because the "Continue" button didn't work. Finally though, after a bunch of little changes in our code and some trial and error, we got the pop-up to fully work!! 