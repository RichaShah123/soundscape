At the start of the semester, I chose to work on the dynamic feedback reminder issue because it was labeled as a good first project, which felt like the right entry point since I was new to both the class and the Soundscape project. The goal was to implement a recurring reminder prompting users to fill out a survey after they’ve spent time using the app, rather than just once during onboarding. It seemed simple at first, but once I dove into the codebase, I quickly hit some obstacles. I realized the feedback form in the main menu wasn’t functional in the simulator, and after some testing, I found that the link pointed to the App Store, which the simulator doesn’t support. I tried updating the link to test whether it was the URL or the code causing issues, and eventually confirmed it was the link itself. I flagged the issue on GitHub and was stuck waiting for a response. Early on, I was also getting used to using Parsec to remotely access the team Mac. There was definitely a learning curve, especially trying to coordinate time and usage with another teammate who was working on a completely different issue. It was a little chaotic at first, but we eventually figured out how to schedule time and communicate better about when and how to use the machine.

While waiting to make more progress on the feedback issue, I pivoted to help Jay with the iPhone language settings problem he had been looking into. After talking to Tim, we decided to collaborate using one shared repo so we could keep track of each other’s work more easily and leave comments on changes. That part of the project felt smoother, and having a partner to bounce ideas off of really helped. We both assumed at first that detecting the system language and syncing it with the app’s UI would be a relatively straightforward fix. But after reading Apple’s localization documentation and testing different properties like preferredLocalizations, we realized there were deeper issues. Something in Soundscape’s setup—possibly the onboarding flow or caching—was preventing language changes from properly reflecting in the UI.

We explored a few potential fixes but none of them worked consistently. After a lot of trial and error, we decided to take a different approach. Instead of forcing the app to automatically switch languages (which could cause more bugs or confusion), we’re now working on a feature that detects when the app language doesn’t match the system language and then prompts the user with a pop-up to switch. It’s a compromise, but one that improves the user experience without introducing instability. Although I haven’t made as much progress as I initially hoped, I’ve learned a lot about iOS development, how localization actually works, and how to collaborate effectively—even when tools like Parsec or the codebase itself are tricky to navigate.

